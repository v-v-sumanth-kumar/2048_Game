{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Translab\\\\Desktop\\\\react-2048-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { slideLeft, slideRight, slideUp, slideDown, addRandomTile, isGameOver } from \"./utils\";\nimport \"./App.css\";\nimport Controls from \"./Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minBoardSize = 3;\nconst maxBoardSize = 8;\nconst initBoard = size => {\n  let board = Array(size).fill().map(() => Array(size).fill(0));\n  board = addRandomTile(board);\n  return addRandomTile(board);\n};\nconst App = () => {\n  _s();\n  const handleGuiMove = direction => {\n    if (gameOver) return;\n    let newBoard;\n    if (direction === \"left\") newBoard = slideLeft(board);\n    if (direction === \"right\") newBoard = slideRight(board);\n    if (direction === \"up\") newBoard = slideUp(board);\n    if (direction === \"down\") newBoard = slideDown(board);\n    if (newBoard && JSON.stringify(newBoard) !== JSON.stringify(board)) {\n      newBoard = addRandomTile(newBoard);\n      setBoard(newBoard);\n      if (isGameOver(newBoard)) setGameOver(true);\n      if (newBoard.flat().includes(2048)) setGameWon(true);\n    }\n  };\n  const [boardSize, setBoardSize] = useState(4);\n  const [board, setBoard] = useState(initBoard(boardSize));\n  const [gameOver, setGameOver] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n  useEffect(() => {\n    setBoard(initBoard(boardSize));\n    setGameOver(false);\n    setGameWon(false);\n  }, [boardSize]);\n  const handleKeyDown = e => {\n    if (gameOver) return;\n    let newBoard;\n    switch (e.key) {\n      case \"ArrowLeft\":\n        newBoard = slideLeft(board);\n        break;\n      case \"ArrowRight\":\n        newBoard = slideRight(board);\n        break;\n      case \"ArrowUp\":\n        newBoard = slideUp(board);\n        break;\n      case \"ArrowDown\":\n        newBoard = slideDown(board);\n        break;\n      default:\n        return;\n    }\n    if (JSON.stringify(newBoard) !== JSON.stringify(board)) {\n      newBoard = addRandomTile(newBoard);\n      setBoard(newBoard);\n      if (isGameOver(newBoard)) setGameOver(true);\n      if (newBoard.flat().includes(2048)) setGameWon(true);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [board, gameOver]);\n  const restartGame = () => {\n    setBoard(initBoard(boardSize));\n    setGameOver(false);\n    setGameWon(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"2048 Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Board Size:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: boardSize,\n        onChange: e => setBoardSize(Number(e.target.value))\n        //disabled={!gameOver && board.flat().some(val => val !== 0)}\n        ,\n        children: [...Array(maxBoardSize - minBoardSize + 1)].map((_, i) => {\n          const size = i + minBoardSize;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: size,\n            children: [size, \" x \", size]\n          }, size, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: \"You Win!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      boardSize: boardSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6CS5Ax6hdmllM8KA1JU1yJr1YDg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Board","slideLeft","slideRight","slideUp","slideDown","addRandomTile","isGameOver","Controls","jsxDEV","_jsxDEV","minBoardSize","maxBoardSize","initBoard","size","board","Array","fill","map","App","_s","handleGuiMove","direction","gameOver","newBoard","JSON","stringify","setBoard","setGameOver","flat","includes","setGameWon","boardSize","setBoardSize","gameWon","handleKeyDown","e","key","window","addEventListener","removeEventListener","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","Number","target","_","i","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Translab/Desktop/react-2048-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { slideLeft, slideRight, slideUp, slideDown, addRandomTile, isGameOver } from \"./utils\";\nimport \"./App.css\";\nimport Controls from \"./Controls\";\n\n\nconst minBoardSize = 3;\nconst maxBoardSize = 8;\n\nconst initBoard = (size) => {\n  let board = Array(size).fill().map(() => Array(size).fill(0));\n  board = addRandomTile(board);\n  return addRandomTile(board);\n};\n\nconst App = () => {\n  const handleGuiMove = (direction) => {\n  if (gameOver) return;\n\n  let newBoard;\n  if (direction === \"left\") newBoard = slideLeft(board);\n  if (direction === \"right\") newBoard = slideRight(board);\n  if (direction === \"up\") newBoard = slideUp(board);\n  if (direction === \"down\") newBoard = slideDown(board);\n\n  if (newBoard && JSON.stringify(newBoard) !== JSON.stringify(board)) {\n    newBoard = addRandomTile(newBoard);\n    setBoard(newBoard);\n    if (isGameOver(newBoard)) setGameOver(true);\n    if (newBoard.flat().includes(2048)) setGameWon(true);\n  }\n};\n  const [boardSize, setBoardSize] = useState(4);\n  const [board, setBoard] = useState(initBoard(boardSize));\n  const [gameOver, setGameOver] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n\n  useEffect(() => {\n    setBoard(initBoard(boardSize));\n    setGameOver(false);\n    setGameWon(false);\n  }, [boardSize]);\n\n  const handleKeyDown = (e) => {\n    if (gameOver) return;\n\n    let newBoard;\n    switch (e.key) {\n      case \"ArrowLeft\":\n        newBoard = slideLeft(board);\n        break;\n      case \"ArrowRight\":\n        newBoard = slideRight(board);\n        break;\n      case \"ArrowUp\":\n        newBoard = slideUp(board);\n        break;\n      case \"ArrowDown\":\n        newBoard = slideDown(board);\n        break;\n      default:\n        return;\n    }\n    if (JSON.stringify(newBoard) !== JSON.stringify(board)) {\n      newBoard = addRandomTile(newBoard);\n      setBoard(newBoard);\n      if (isGameOver(newBoard)) setGameOver(true);\n      if (newBoard.flat().includes(2048)) setGameWon(true);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [board, gameOver]);\n\n  const restartGame = () => {\n    setBoard(initBoard(boardSize));\n    setGameOver(false);\n    setGameWon(false);\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>2048 Game</h1>\n      <label>\n        Select Board Size:{\" \"}\n        <select\n          value={boardSize}\n          onChange={(e) => setBoardSize(Number(e.target.value))}\n          //disabled={!gameOver && board.flat().some(val => val !== 0)}\n        >\n          {[...Array(maxBoardSize - minBoardSize + 1)].map((_, i) => {\n            const size = i + minBoardSize;\n            return <option key={size} value={size}>{size} x {size}</option>;\n          })}\n        </select>\n      </label>\n      {gameWon && <div className=\"message\">You Win!</div>}\n      {gameOver && <div className=\"message\">Game Over!</div>}\n      <Board board={board} boardSize={boardSize} />\n      <button onClick={restartGame}>Restart</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}